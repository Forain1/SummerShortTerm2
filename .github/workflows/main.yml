name: Build with Qt6 Multimedia (MinGW) on Windows

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Qt Online Installer
      run: |
        curl -L https://download.qt.io/official_releases/online_installers/qt-unified-windows-x86_64-online.exe -o qt-installer.exe

    - name: Write Qt install script (qt-install.qs)
      run: |
        echo function Controller() { installer.autoAcceptLicenses(); } > qt-install.qs
        echo function ComponentSelectionPageCallback() { >> qt-install.qs
        echo var widget = gui.pageWidgetByObjectName("ComponentSelectionPage"); >> qt-install.qs
        echo widget.deselectAll(); >> qt-install.qs
        echo widget.selectComponent("qt.qt6.65.win64_mingw81"); >> qt-install.qs
        echo widget.selectComponent("qt.qt6.65.qt.multimedia.win64_mingw81"); >> qt-install.qs
        echo } >> qt-install.qs

    - name: Run Qt Installer silently
      run: |
        .\qt-installer.exe --script qt-install.qs --verbose

    - name: Add Qt to PATH
      shell: powershell
      run: |
        $env:PATH += ";C:\Qt\6.5.2\mingw81_64\bin"
        Write-Output $env:PATH

    - name: Configure project with CMake
      run: cmake -S . -B build -G Ninja -DCMAKE_PREFIX_PATH="C:/Qt/6.5.2/mingw81_64/lib/cmake"

    - name: Build project
      run: cmake --build build
